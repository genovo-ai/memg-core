FROM python:3.11-slim

ENV PIP_DISABLE_PIP_VERSION_CHECK=1 PYTHONDONTWRITEBYTECODE=1 PYTHONUNBUFFERED=1
WORKDIR /app

# Install system dependencies in one layer
RUN apt-get update && apt-get install -y --no-install-recommends curl && rm -rf /var/lib/apt/lists/*

# Create storage directories early
RUN mkdir -p /qdrant /kuzu

# Set environment variables
ENV QDRANT_STORAGE_PATH=/qdrant
ENV KUZU_DB_PATH=/kuzu/memory_db
ENV MEMG_YAML_SCHEMA=/app/config/core.minimal.yaml
# MEMORY_SYSTEM_MCP_PORT will be set by docker-compose from .env file

# Install MCP server dependencies first (these change less often)
RUN pip install --no-cache-dir \
    "fastmcp>=0.2.0" \
    "uvicorn>=0.30.0" \
    "pydantic>=2.0.0" \
    "starlette>=0.37"

# Copy and install memg-core from source (like working local version)
COPY pyproject.toml README.md requirements.txt /app/
COPY src/ /app/src/
RUN echo "ðŸ“¦ Installing memg-core from source..." && \
    pip install --no-cache-dir -e .

# Create config directory and copy the YAML schema to fixed location
RUN mkdir -p /app/config
COPY config/core.minimal.yaml /app/config/

# Copy the MCP server (changes often, so do last)
COPY mcp/mcp_server.py /app/

# Set default host for Docker container (override via env var)
ENV MEMORY_SYSTEM_MCP_HOST=0.0.0.0

# Expose the port (will be overridden by docker-compose port mapping)
EXPOSE 8787

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=40s --retries=3 \
    CMD curl -f "http://localhost:${MEMORY_SYSTEM_MCP_PORT:-8787}/health" || exit 1

# Run the MCP server
CMD ["python", "mcp_server.py"]
